// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Zvonobot API Test

/**
 * –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
const CONFIG = {
    // API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    API: {
        BASE_URL: 'http://localhost:8081/api',
        TIMEOUT: 30000, // 30 —Å–µ–∫—É–Ω–¥
        RETRY_ATTEMPTS: 3
    },
    
    // UI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    UI: {
        NOTIFICATION_DURATION: 3000, // 3 —Å–µ–∫—É–Ω–¥—ã
        MAX_PHONE_NUMBERS: 10,
        ANIMATION_DURATION: 300
    },
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    VALIDATION: {
        PHONE_REGEX: /^7\d{10}$/,
        MIN_TEXT_LENGTH: 1,
        MAX_TEXT_LENGTH: 1000
    },
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    TEST_DATA: {
        PHONE: '+77079621630',
        VOICE_TEXT: '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –æ—Ç API –ó–≤–æ–Ω–æ–±–æ—Ç–∞.',
        SMS_TEXT: '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ SMS —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.',
        RECORD_ID: '247273'
    },
    
    // –°–æ–æ–±—â–µ–Ω–∏—è
    MESSAGES: {
        SUCCESS: {
            API_KEY_TEST: 'API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç!',
            PHONES_LOADED: '–ù–æ–º–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã',
            PROFILE_LOADED: '–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω',
            RECORDS_LOADED: '–ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã',
            MESSAGE_SENT: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'
        },
        ERROR: {
            VALIDATION: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏',
            NETWORK: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏',
            API: '–û—à–∏–±–∫–∞ API',
            UNKNOWN: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
        },
        LOADING: {
            API_KEY: 'üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª—é—á–∞...',
            PHONES: 'üìû –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤...',
            PROFILE: 'üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...',
            RECORDS: 'üéµ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤...',
            SENDING: 'üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...'
        }
    },
    
    // –¶–≤–µ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    COLORS: {
        SUCCESS: '#28a745',
        ERROR: '#dc3545',
        WARNING: '#ffc107',
        INFO: '#17a2b8',
        PRIMARY: '#007bff'
    }
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
function getConfig(path) {
    return path.split('.').reduce((obj, key) => obj && obj[key], CONFIG);
}

/**
 * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
function setConfig(path, value) {
    const keys = path.split('.');
    const lastKey = keys.pop();
    const obj = keys.reduce((obj, key) => obj[key] = obj[key] || {}, CONFIG);
    obj[lastKey] = value;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
function isDevelopment() {
    return window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
 */
function log(message, type = 'info') {
    if (isDevelopment()) {
        const timestamp = new Date().toLocaleTimeString();
        const prefix = `[${timestamp}]`;
        
        switch (type) {
            case 'error':
                console.error(prefix, message);
                break;
            case 'warn':
                console.warn(prefix, message);
                break;
            case 'success':
                console.log(prefix, '‚úÖ', message);
                break;
            default:
                console.log(prefix, message);
        }
    }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
window.CONFIG = CONFIG;
window.getConfig = getConfig;
window.setConfig = setConfig;
window.isDevelopment = isDevelopment;
window.log = log; 